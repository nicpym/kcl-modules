"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1

schema ClusterEndpoint:
    """
    ClusterEndpoint is the Schema for the ClusterEndpoints API. Manages an RDS Aurora Cluster Endpoint

    Attributes
    ----------
    apiVersion : str, default is "rds.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterEndpoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RdsAwsUpboundIoV1beta1ClusterEndpointSpec, default is Undefined, required
        spec
    status : RdsAwsUpboundIoV1beta1ClusterEndpointStatus, default is Undefined, optional
        status
    """
    apiVersion: "rds.aws.upbound.io/v1beta1" = "rds.aws.upbound.io/v1beta1"
    kind: "ClusterEndpoint" = "ClusterEndpoint"
    metadata?: v1.ObjectMeta
    spec: RdsAwsUpboundIoV1beta1ClusterEndpointSpec
    status?: RdsAwsUpboundIoV1beta1ClusterEndpointStatus

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpec:
    """
    ClusterEndpointSpec defines the desired state of ClusterEndpoint

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProvider, default is Undefined, required
        for provider
    initProvider : RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RdsAwsUpboundIoV1beta1ClusterEndpointSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RdsAwsUpboundIoV1beta1ClusterEndpointSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """
    deletionPolicy?: "Orphan" | "Delete" = "Delete"
    forProvider: RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProvider
    initProvider?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProvider
    managementPolicies?: [str] = ["*"]
    providerConfigRef?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecProviderConfigRef
    publishConnectionDetailsTo?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsTo
    writeConnectionSecretToRef?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecWriteConnectionSecretToRef

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProvider:
    """
    rds aws upbound io v1beta1 cluster endpoint spec for provider

    Attributes
    ----------
    clusterIdentifier : str, default is Undefined, optional
        The cluster identifier.
    clusterIdentifierRef : RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierRef, default is Undefined, optional
        cluster identifier ref
    clusterIdentifierSelector : RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierSelector, default is Undefined, optional
        cluster identifier selector
    customEndpointType : str, default is Undefined, optional
        The type of the endpoint. One of: READER , ANY .
    excludedMembers : [str], default is Undefined, optional
        List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty. Conflicts with static_members.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    staticMembers : [str], default is Undefined, optional
        List of DB instance identifiers that are part of the custom endpoint group. Conflicts with excluded_members.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """
    clusterIdentifier?: str
    clusterIdentifierRef?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierRef
    clusterIdentifierSelector?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierSelector
    customEndpointType?: str
    excludedMembers?: [str]
    region: str
    staticMembers?: [str]
    tags?: {str:str}

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierRef:
    """
    Reference to a Cluster in rds to populate clusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """
    name: str
    policy?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierRefPolicy

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierSelector:
    """
    Selector for a Cluster in rds to populate clusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierSelectorPolicy

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecForProviderClusterIdentifierSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    clusterIdentifier : str, default is Undefined, optional
        The cluster identifier.
    clusterIdentifierRef : RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierRef, default is Undefined, optional
        cluster identifier ref
    clusterIdentifierSelector : RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierSelector, default is Undefined, optional
        cluster identifier selector
    customEndpointType : str, default is Undefined, optional
        The type of the endpoint. One of: READER , ANY .
    excludedMembers : [str], default is Undefined, optional
        List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty. Conflicts with static_members.
    staticMembers : [str], default is Undefined, optional
        List of DB instance identifiers that are part of the custom endpoint group. Conflicts with excluded_members.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """
    clusterIdentifier?: str
    clusterIdentifierRef?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierRef
    clusterIdentifierSelector?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierSelector
    customEndpointType?: str
    excludedMembers?: [str]
    staticMembers?: [str]
    tags?: {str:str}

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierRef:
    """
    Reference to a Cluster in rds to populate clusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """
    name: str
    policy?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierRefPolicy

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierSelector:
    """
    Selector for a Cluster in rds to populate clusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierSelectorPolicy

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecInitProviderClusterIdentifierSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterEndpointSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str
    policy?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecProviderConfigRefPolicy

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """
    configRef?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsToConfigRef
    metadata?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsToMetadata
    name: str

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str
    policy?: RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsToConfigRefPolicy

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """
    annotations?: {str:str}
    labels?: {str:str}
    $type?: str

schema RdsAwsUpboundIoV1beta1ClusterEndpointSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """
    name: str
    namespace: str

schema RdsAwsUpboundIoV1beta1ClusterEndpointStatus:
    """
    ClusterEndpointStatus defines the observed state of ClusterEndpoint.

    Attributes
    ----------
    atProvider : RdsAwsUpboundIoV1beta1ClusterEndpointStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RdsAwsUpboundIoV1beta1ClusterEndpointStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """
    atProvider?: RdsAwsUpboundIoV1beta1ClusterEndpointStatusAtProvider
    conditions?: [RdsAwsUpboundIoV1beta1ClusterEndpointStatusConditionsItems0]

schema RdsAwsUpboundIoV1beta1ClusterEndpointStatusAtProvider:
    """
    rds aws upbound io v1beta1 cluster endpoint status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of cluster
    clusterIdentifier : str, default is Undefined, optional
        The cluster identifier.
    customEndpointType : str, default is Undefined, optional
        The type of the endpoint. One of: READER , ANY .
    endpoint : str, default is Undefined, optional
        A custom endpoint for the Aurora cluster
    excludedMembers : [str], default is Undefined, optional
        List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty. Conflicts with static_members.
    id : str, default is Undefined, optional
        The RDS Cluster Endpoint Identifier
    staticMembers : [str], default is Undefined, optional
        List of DB instance identifiers that are part of the custom endpoint group. Conflicts with excluded_members.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    arn?: str
    clusterIdentifier?: str
    customEndpointType?: str
    endpoint?: str
    excludedMembers?: [str]
    id?: str
    staticMembers?: [str]
    tags?: {str:str}
    tagsAll?: {str:str}

schema RdsAwsUpboundIoV1beta1ClusterEndpointStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """
    lastTransitionTime: str
    message?: str
    reason: str
    status: str
    $type: str

