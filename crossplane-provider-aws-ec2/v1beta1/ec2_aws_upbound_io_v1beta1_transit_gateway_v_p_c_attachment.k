"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1

schema TransitGatewayVPCAttachment:
    """
    TransitGatewayVPCAttachment is the Schema for the TransitGatewayVPCAttachments API. Manages an EC2 Transit Gateway VPC Attachment

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TransitGatewayVPCAttachment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpec, default is Undefined, required
        spec
    status : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentStatus, default is Undefined, optional
        status
    """
    apiVersion: "ec2.aws.upbound.io/v1beta1" = "ec2.aws.upbound.io/v1beta1"
    kind: "TransitGatewayVPCAttachment" = "TransitGatewayVPCAttachment"
    metadata?: v1.ObjectMeta
    spec: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpec
    status?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentStatus

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpec:
    """
    TransitGatewayVPCAttachmentSpec defines the desired state of TransitGatewayVPCAttachment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """
    deletionPolicy?: "Orphan" | "Delete" = "Delete"
    forProvider: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProvider
    initProvider?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProvider
    managementPolicies?: [str] = ["*"]
    providerConfigRef?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecProviderConfigRef
    publishConnectionDetailsTo?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsTo
    writeConnectionSecretToRef?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecWriteConnectionSecretToRef

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProvider:
    """
    ec2 aws upbound io v1beta1 transit gateway v p c attachment spec for provider

    Attributes
    ----------
    applianceModeSupport : str, default is Undefined, optional
        Whether Appliance Mode support is enabled. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. Valid values: disable, enable. Default value: disable.
    dnsSupport : str, default is Undefined, optional
        Whether DNS support is enabled. Valid values: disable, enable. Default value: enable.
    ipv6Support : str, default is Undefined, optional
        Whether IPv6 support is enabled. Valid values: disable, enable. Default value: disable.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    subnetIdRefs : [Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        Identifiers of EC2 Subnets.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    transitGatewayDefaultRouteTableAssociation : bool, default is Undefined, optional
        Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.
    transitGatewayDefaultRouteTablePropagation : bool, default is Undefined, optional
        Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.
    transitGatewayId : str, default is Undefined, optional
        Identifier of EC2 Transit Gateway.
    transitGatewayIdRef : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDRef, default is Undefined, optional
        transit gateway Id ref
    transitGatewayIdSelector : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDSelector, default is Undefined, optional
        transit gateway Id selector
    vpcId : str, default is Undefined, optional
        Identifier of EC2 VPC.
    vpcIdRef : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """
    applianceModeSupport?: str
    dnsSupport?: str
    ipv6Support?: str
    region: str
    subnetIdRefs?: [Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDRefsItems0]
    subnetIdSelector?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDSelector
    subnetIds?: [str]
    tags?: {str:str}
    transitGatewayDefaultRouteTableAssociation?: bool
    transitGatewayDefaultRouteTablePropagation?: bool
    transitGatewayId?: str
    transitGatewayIdRef?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDRef
    transitGatewayIdSelector?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDSelector
    vpcId?: str
    vpcIdRef?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDRef
    vpcIdSelector?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDSelector

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """
    name: str
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDRefsItems0Policy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDSelector:
    """
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDSelectorPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderSubnetIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDRef:
    """
    Reference to a TransitGateway to populate transitGatewayId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDRefPolicy, default is Undefined, optional
        policy
    """
    name: str
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDRefPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDSelector:
    """
    Selector for a TransitGateway to populate transitGatewayId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDSelectorPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderTransitGatewayIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDRef:
    """
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """
    name: str
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDRefPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDSelector:
    """
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDSelectorPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecForProviderVpcIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applianceModeSupport : str, default is Undefined, optional
        Whether Appliance Mode support is enabled. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. Valid values: disable, enable. Default value: disable.
    dnsSupport : str, default is Undefined, optional
        Whether DNS support is enabled. Valid values: disable, enable. Default value: enable.
    ipv6Support : str, default is Undefined, optional
        Whether IPv6 support is enabled. Valid values: disable, enable. Default value: disable.
    subnetIdRefs : [Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        Identifiers of EC2 Subnets.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    transitGatewayDefaultRouteTableAssociation : bool, default is Undefined, optional
        Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.
    transitGatewayDefaultRouteTablePropagation : bool, default is Undefined, optional
        Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.
    transitGatewayId : str, default is Undefined, optional
        Identifier of EC2 Transit Gateway.
    transitGatewayIdRef : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDRef, default is Undefined, optional
        transit gateway Id ref
    transitGatewayIdSelector : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDSelector, default is Undefined, optional
        transit gateway Id selector
    vpcId : str, default is Undefined, optional
        Identifier of EC2 VPC.
    vpcIdRef : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """
    applianceModeSupport?: str
    dnsSupport?: str
    ipv6Support?: str
    subnetIdRefs?: [Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDRefsItems0]
    subnetIdSelector?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDSelector
    subnetIds?: [str]
    tags?: {str:str}
    transitGatewayDefaultRouteTableAssociation?: bool
    transitGatewayDefaultRouteTablePropagation?: bool
    transitGatewayId?: str
    transitGatewayIdRef?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDRef
    transitGatewayIdSelector?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDSelector
    vpcId?: str
    vpcIdRef?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDRef
    vpcIdSelector?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDSelector

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """
    name: str
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDRefsItems0Policy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDSelector:
    """
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDSelectorPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderSubnetIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDRef:
    """
    Reference to a TransitGateway to populate transitGatewayId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDRefPolicy, default is Undefined, optional
        policy
    """
    name: str
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDRefPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDSelector:
    """
    Selector for a TransitGateway to populate transitGatewayId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDSelectorPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderTransitGatewayIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDRef:
    """
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """
    name: str
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDRefPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDSelector:
    """
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDSelectorPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecInitProviderVpcIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecProviderConfigRefPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """
    configRef?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsToConfigRef
    metadata?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsToMetadata
    name: str

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str
    policy?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsToConfigRefPolicy

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """
    annotations?: {str:str}
    labels?: {str:str}
    $type?: str

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """
    name: str
    namespace: str

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentStatus:
    """
    TransitGatewayVPCAttachmentStatus defines the observed state of TransitGatewayVPCAttachment.

    Attributes
    ----------
    atProvider : Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """
    atProvider?: Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentStatusAtProvider
    conditions?: [Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentStatusConditionsItems0]

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentStatusAtProvider:
    """
    ec2 aws upbound io v1beta1 transit gateway v p c attachment status at provider

    Attributes
    ----------
    applianceModeSupport : str, default is Undefined, optional
        Whether Appliance Mode support is enabled. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. Valid values: disable, enable. Default value: disable.
    dnsSupport : str, default is Undefined, optional
        Whether DNS support is enabled. Valid values: disable, enable. Default value: enable.
    id : str, default is Undefined, optional
        EC2 Transit Gateway Attachment identifier
    ipv6Support : str, default is Undefined, optional
        Whether IPv6 support is enabled. Valid values: disable, enable. Default value: disable.
    subnetIds : [str], default is Undefined, optional
        Identifiers of EC2 Subnets.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    transitGatewayDefaultRouteTableAssociation : bool, default is Undefined, optional
        Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.
    transitGatewayDefaultRouteTablePropagation : bool, default is Undefined, optional
        Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.
    transitGatewayId : str, default is Undefined, optional
        Identifier of EC2 Transit Gateway.
    vpcId : str, default is Undefined, optional
        Identifier of EC2 VPC.
    vpcOwnerId : str, default is Undefined, optional
        Identifier of the AWS account that owns the EC2 VPC.
    """
    applianceModeSupport?: str
    dnsSupport?: str
    id?: str
    ipv6Support?: str
    subnetIds?: [str]
    tags?: {str:str}
    tagsAll?: {str:str}
    transitGatewayDefaultRouteTableAssociation?: bool
    transitGatewayDefaultRouteTablePropagation?: bool
    transitGatewayId?: str
    vpcId?: str
    vpcOwnerId?: str

schema Ec2AwsUpboundIoV1beta1TransitGatewayVPCAttachmentStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """
    lastTransitionTime: str
    message?: str
    reason: str
    status: str
    $type: str

